version: '3.8'

services:
  # Aplicaci√≥n principal
  app:
    build:
      context: .
      dockerfile: Dockerfile.oracle_arm64
    container_name: verificacion-app
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - RASA_URL=http://rasa:5005
      - NEO4J_URI=neo4j://db:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=verificacion2025
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=verificacion
      - DB_USER=postgres
      - DB_PASSWORD=verificacion2025
    depends_on:
      - postgres
      - redis
      - db
      - rasa
    volumes:
      - ./uploads:/app/uploads
      - ./temp:/app/temp
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./analysis_results:/app/analysis_results
      - ./context_storage:/app/context_storage
    networks:
      - verificacion-network
    restart: unless-stopped

  # Rasa microservicio
  rasa:
    build:
      context: .
      dockerfile: Dockerfile.rasa
    container_name: verificacion-rasa
    ports:
      - "5005:5005"
    env_file:
      - .env
    environment:
      - RASA_ENDPOINT=http://rasa:5005
    volumes:
      - ./rasa_bot:/app/rasa_bot
      - ./logs:/app/logs
    networks:
      - verificacion-network
    restart: unless-stopped

  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: verificacion-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=verificacion
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=verificacion2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - verificacion-network
    restart: unless-stopped

  # Base de datos Neo4j
  db:
    image: neo4j:5.14-community
    container_name: verificacion-db
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/verificacion2025
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - verificacion-network
    restart: unless-stopped

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: verificacion-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - verificacion-network
    restart: unless-stopped

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: verificacion-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
      - rasa
    networks:
      - verificacion-network
    restart: unless-stopped

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  redis_data:

networks:
  verificacion-network:
    driver: bridge